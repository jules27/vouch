- if @wish_list.nil? or @wish_list.empty?
  %h4 Places I Want To Go
  %p
    You don't have any places you want to go. Please
    = link_to "add one!", friends_path
- else
  - if params[:query].present?
    %h3 Places I Want to Go that Include '#{params[:query]}'
  - else
    %h3 Places I Want To Go In #{@wish_list.city.name}

  .alert.alert-error.wish-list-errors
  .alert.alert-success.wish-list-success

  .search-form
    %p.text-info
      Search for Restaurants or Tags
    .input-append
      = form_tag wish_lists_path, method: :get, class: "name-search" do
        = text_field_tag :query, params[:query], placeholder: "Restaurant name or tag...", class: "input-xlarge"
        = submit_tag "Search", name: nil, class: "btn btn-info"
        = link_to "Clear", wish_lists_path, class: "btn"
    %br

  .add-new
    = link_to "Add a New Place to Your Wish List", new_wish_item_by_type_and_list_path(@type.id, @wish_list.id)

  %br

  %div
    - if params[:query].present?
      - my_wish_lists = User.wish_lists_by_keyword(current_user, params[:query])
    - else
      - my_wish_lists = [@wish_list]

    - my_wish_lists.each do |list|
      %table.table.table-striped.table-condensed.restaurants-listing
        %thead
          %tr
            %th{ colspan: "2" }
              Restaurant
            %th
              Neighborhoods
            %th
              Yelp Rating
            %th
              Reviews
            %th
              Friend Who Inspired
            %th
        %tbody
          - list.wish_items.each do |item|
            - b = item.business
            - next unless b.present?
            %tr
              %td
                = business_image(b)
              %td
                = b.name
              %td
                = b.neighborhood
              %td
                = business_rating(b)
              %td
                = business_review_count(b)
              %td
                = inspired_by(item)
              %td
                = link_to "Mark As Visited", "#", class: "btn btn-primary mark-item-visited", id: "#{item.id}"
                &nbsp;
                = link_to "Remove", "#", class: "btn btn-danger btn-small remove-wish-item", id: "#{item.id}"

.friends-lists
  - current_user.friends.each do |friend|
    - if params[:query].present?
      - friend_wish_lists = User.wish_lists_by_keyword(friend, params[:query])
    - else
      - friend_wish_lists = [friend.wish_list_in_city(current_user.default_city)]

    - if friend_wish_lists.present?
      - friend_wish_lists.each do |friend_list|
        - next if friend_list.nil? or friend_list.empty?

        - if params[:query].present?
          %h4 Places #{friend.name} Wants To Go In #{friend_list.city.name} that Include '#{params[:query]}'
        - else
          %h4 Places #{friend.name} Wants To Go In #{friend_list.city.name}
        %table.table.table-striped.table-condensed
          %thead
            %tr
              %th{ colspan: "2" }
                Restaurant
              %th
                Neighborhoods
              %th
                Yelp Rating
              %th
                Reviews
              %th
                Friend Who Inspired
              %th
          %tbody
            - friend_list.wish_items.each do |item|
              - b = item.business
              - next unless b.present?
              %tr
                %td
                  = business_image(b)
                %td
                  = b.name
                %td
                  = b.neighborhood
                %td
                  = business_rating(b)
                %td
                  = business_review_count(b)
                %td
                  = inspired_by(item)
                %td
                  = link_to "Add to \"Places I Want to Go\"", wish_items_path(city_id: friend_list.city.id, wish_item: { business_id: b.id, user_id: friend.id}), class: "btn btn-primary", method: :post
