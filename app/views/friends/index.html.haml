- if @friends.count == 0
  You don't have any friends.
  = add_friend_link
- else
  %p.text-info
    Search for Restaurants or Tags
  .input-append
    = form_tag friends_path, method: :get, class: "name-search" do
      = text_field_tag :query, params[:query], placeholder: "Restaurant name or tag...", class: "input-xlarge"
      = submit_tag "Search", name: nil, class: "btn"
      = link_to "Clear", friends_path, class: "btn"

  - if params[:query].present?
    %h3
      Friends' Lists that Include '#{params[:query]}'

  - not_found = true
  - @friends.each do |friend|
    - if params[:query].present?
      - lists = User.vouch_lists_by_keyword(friend, params[:query])
    - else
      - lists = friend.vouch_lists_by_city(@city.name)

    - lists.each do |list|
      - not_found = false
      %h4
        = capitalize_title(list.title)

      %div
        %table.table.table-striped.table-condensed.restaurants-listing
          %thead
            %tr
              %th
                Restaurants
              %th
                Neighborhoods
              %th
                Yelp Rating
              %th
                Reviews
              %th
                Tags
              %th
          %tbody
            - list.vouch_items.each do |item|
              - b = Business.find(item.business_id)
              %tr
                %td
                  - if b.yelp_id.present?
                    = link_to image_tag(b.image_url), "http://www.yelp.com/biz/#{b.yelp_id}", target: "_blank"
                  - else
                    = image_tag b.image_url
                %td
                  = b.name
                %td
                  = b.neighborhood
                %td
                  %span{ class: "rating-static rating-#{rating_class(b.yelp_rating)}" }
                %td
                  = b.yelp_review_count
                %td
                  = item.tag_list
                %td
                  = link_to "Add to \"Places I Want to Go\"", "#", class: "btn btn-primary"

  - if not_found == true
    No records found.
